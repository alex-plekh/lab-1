{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "AWS CloudFormation Sample Template WordPress_Single_Instance: WordPress is web software you can use to create a beautiful website or blog. This template installs WordPress with a local MySQL database for storage. It demonstrates using the AWS CloudFormation bootstrap scripts to deploy WordPress. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters": {

    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "lab1-jenkins",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },

    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.small",
      "AllowedValues": [
        "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large",
        "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge",
        "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large",
        "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge",
        "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large",
        "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge",
        "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge",
        "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge",
        "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },

    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "DBName": {
      "Default": "wordpressdb",
      "Description": "The WordPress database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },

    "DBUser": {
      "NoEcho": "true",
      "Default": "admin",
      "Description": "The WordPress database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword": {
      "NoEcho": "true",
      "Description": "The WordPress database admin account password",
      "Type": "String",
      "Default": "Password123",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    },

    "DBRootPassword": {
      "NoEcho": "true",
      "Description": "MySQL root password",
      "Type": "String",
      "Default": "Password123",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    }
  },

  "Mappings": {
    "AWSInstanceType2Arch": {
      "c1.medium": { "Arch": "HVM64" },
      "c1.xlarge": { "Arch": "HVM64" },
      "c3.2xlarge": { "Arch": "HVM64" },
      "c3.4xlarge": { "Arch": "HVM64" },
      "c3.8xlarge": { "Arch": "HVM64" },
      "c3.large": { "Arch": "HVM64" },
      "c3.xlarge": { "Arch": "HVM64" },
      "c4.2xlarge": { "Arch": "HVM64" },
      "c4.4xlarge": { "Arch": "HVM64" },
      "c4.8xlarge": { "Arch": "HVM64" },
      "c4.large": { "Arch": "HVM64" },
      "c4.xlarge": { "Arch": "HVM64" },
      "cc2.8xlarge": { "Arch": "HVM64" },
      "cr1.8xlarge": { "Arch": "HVM64" },
      "d2.2xlarge": { "Arch": "HVM64" },
      "d2.4xlarge": { "Arch": "HVM64" },
      "d2.8xlarge": { "Arch": "HVM64" },
      "d2.xlarge": { "Arch": "HVM64" },
      "g2.2xlarge": { "Arch": "HVMG2" },
      "g2.8xlarge": { "Arch": "HVMG2" },
      "hi1.4xlarge": { "Arch": "HVM64" },
      "hs1.8xlarge": { "Arch": "HVM64" },
      "i2.2xlarge": { "Arch": "HVM64" },
      "i2.4xlarge": { "Arch": "HVM64" },
      "i2.8xlarge": { "Arch": "HVM64" },
      "i2.xlarge": { "Arch": "HVM64" },
      "m1.large": { "Arch": "HVM64" },
      "m1.medium": { "Arch": "HVM64" },
      "m1.small": { "Arch": "HVM64" },
      "m1.xlarge": { "Arch": "HVM64" },
      "m2.2xlarge": { "Arch": "HVM64" },
      "m2.4xlarge": { "Arch": "HVM64" },
      "m2.xlarge": { "Arch": "HVM64" },
      "m3.2xlarge": { "Arch": "HVM64" },
      "m3.large": { "Arch": "HVM64" },
      "m3.medium": { "Arch": "HVM64" },
      "m3.xlarge": { "Arch": "HVM64" },
      "m4.10xlarge": { "Arch": "HVM64" },
      "m4.2xlarge": { "Arch": "HVM64" },
      "m4.4xlarge": { "Arch": "HVM64" },
      "m4.large": { "Arch": "HVM64" },
      "m4.xlarge": { "Arch": "HVM64" },
      "r3.2xlarge": { "Arch": "HVM64" },
      "r3.4xlarge": { "Arch": "HVM64" },
      "r3.8xlarge": { "Arch": "HVM64" },
      "r3.large": { "Arch": "HVM64" },
      "r3.xlarge": { "Arch": "HVM64" },
      "t1.micro": { "Arch": "HVM64" },
      "t2.large": { "Arch": "HVM64" },
      "t2.medium": { "Arch": "HVM64" },
      "t2.micro": { "Arch": "HVM64" },
      "t2.nano": { "Arch": "HVM64" },
      "t2.small": { "Arch": "HVM64" }
    },
    "AWSRegionArch2AMI": {
      "us-east-1": { "HVM64": "ami-a4c7edb2", "HVMG2": "ami-8c4c6fe2" },
      "us-west-1": { "HVM64": "ami-b4c4d7c4", "HVMG2": "ami-9c4d68e4" },
      "us-west-2": { "HVM64": "ami-8c4c77e4", "HVMG2": "ami-984c7be4" }
    }
  },

  "Resources": {
    "WebServerInstance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "wordpress_install": [
              "wordpress_install"
            ]
          },
          "wordpress_install": {
            "packages": {
              "yum": {
                "httpd": [],
                "mysql": [],
                "mysql-server": [],
                "php": [],
                "php-mysql": [],
                "wget": []
              }
            },
            "files": {
              "/etc/cfn/cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "mode": "000400",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
                      "action=/opt/aws/bin/cfn-init -v ",
                      "         --stack ",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "         --resource WebServerInstance ",
                      "         --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "mode": "000400",
                "owner": "root",
                "group": "root"
              }
            },
            "services": {
              "sysvinit": {
                "httpd": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/httpd/conf/httpd.conf",
                    "/var/www/html/index.php"
                  ]
                },
                "mysqld": {
                  "enabled": "true",
                  "ensureRunning": "true"
                },
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          }
        }
      },
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "yum update -y aws-cfn-bootstrap\n",
                "# Install LAMP packages\n",
                "yum install -y httpd mysql php php-mysql\n",
                "# Install PHP PEAR package\n",
                "yum install -y php-pear\n",
                "# Install MySQL server\n",
                "yum install -y mysql-server\n",
                "# Install MySQL client\n",
                "yum install -y mysql\n",
                "# Start MySQL service\n",
                "service mysqld start\n",
                "# Configure MySQL root password\n",
                "mysqladmin -u root password '",
                {
                  "Ref": "DBRootPassword"
                },
                "'\n",
                "# Create MySQL database\n",
                "mysql -u root -p",
                {
                  "Ref": "DBRootPassword"
                },
                " -e 'CREATE DATABASE ",
                {
                  "Ref": "DBName"
                },
                "'\n",
                "# Create MySQL user and grant privileges\n",
                "mysql -u root -p",
                {
                  "Ref": "DBRootPassword"
                },
                " -e \"CREATE USER '",
                {
                  "Ref": "DBUser"
                },
                "'@'localhost' IDENTIFIED BY '",
                {
                  "Ref": "DBPassword"
                },
                "'\"\n",
                "mysql -u root -p",
                {
                  "Ref": "DBRootPassword"
                },
                " -e \"GRANT ALL PRIVILEGES ON ",
                {
                  "Ref": "DBName"
                },
                ".* TO '",
                {
                  "Ref": "DBUser"
                },
                "'@'localhost'\"\n",
                "mysql -u root -p",
                {
                  "Ref": "DBRootPassword"
                },
                " -e 'FLUSH PRIVILEGES'\n",
                "# Download WordPress\n",
                "cd /var/www/html\n",
                "wget https://wordpress.org/latest.tar.gz\n",
                "tar -xzf latest.tar.gz\n",
                "cp -r wordpress/* .\n",
                "rm -rf wordpress latest.tar.gz\n",
                "# Set ownership and permissions\n",
                "chown -R apache:apache /var/www/html\n",
                "# Configure WordPress\n",
                "cp wp-config-sample.php wp-config.php\n",
                "sed -i \"s/database_name_here/",
                {
                  "Ref": "DBName"
                },
                "/g\" wp-config.php\n",
                "sed -i \"s/username_here/",
                {
                  "Ref": "DBUser"
                },
                "/g\" wp-config.php\n",
                "sed -i \"s/password_here/",
                {
                  "Ref": "DBPassword"
                },
                "/g\" wp-config.php\n",
                "# Start Apache service\n",
                "service httpd start\n",
                "# Enable Apache and MySQL to start on boot\n",
                "chkconfig httpd on\n",
                "chkconfig mysqld on\n"
              ]
            ]
          }
        }
      }
    },

    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH and HTTP access",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }
  },

  "Outputs": {
    "WebsiteURL": {
      "Description": "WordPress Website URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "WebServerInstance",
                "PublicDnsName"
              ]
            }
          ]
        ]
      }
    }
  }
}
